{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#","kb-article":"d3f:kb-article","definition":"d3f:definition","kb-reference":{"@id":"d3f:kb-reference","@container":"@set"}},"@graph":[{"@id":"_:b4"},{"@id":"d3f:Detect"},{"@id":"d3f:Firmware"},{"@id":"d3f:FirmwareVerification","@type":["http://www.w3.org/2002/07/owl#NamedIndividual","d3f:PlatformMonitoring","http://www.w3.org/2002/07/owl#Class","_:b0","_:b1","_:b2","_:b3"],"d3f:d3fend-id":"D3-FV","definition":"Using embedded trust identification markers to identify legitimate firmware and hardware configurations.","d3f:enables":{"@id":"d3f:Detect"},"kb-article":"## How it works\nValid firmware, and hardware configurations, are identified and marked with a trust identification value. The trust identification value is stored on one of the embedded devices of the trusted configuration. A centralized database of trusted values is maintained for the identified configurations on a trust server, and they are used in the validation process.\n\nThe validation process uses a trust server to validate deployed trusted configurations by employing an attestation protocol. The user defined values and specific hardware values are cryptographically compared to the stored trust values on the devices . Comparisons that fail the attestation test are deemed untrusted.\n\n\n\n## Considerations\n* Requires the deployment of a centralized trust server\n* Trust values will need to be generated for specific devices\n* Changes to trusted configurations will need to be managed across the enterprise","kb-reference":[{"@id":"d3f:Reference_PlatformFirmwareResiliencyGuidelines_NIST"},{"@id":"d3f:Reference-FirmwareVerificationEclypsium"},{"@id":"d3f:Reference-FirmwareVerificationTrapezoid"}],"d3f:verifies":{"@id":"d3f:Firmware"},"rdfs:label":"Firmware Verification","rdfs:subClassOf":[{"@id":"d3f:PlatformMonitoring"},{"@id":"_:b4"}]},{"@id":"d3f:PlatformMonitoring"},{"@id":"d3f:Reference-FirmwareVerificationEclypsium"},{"@id":"d3f:Reference-FirmwareVerificationTrapezoid"},{"@id":"d3f:Reference_PlatformFirmwareResiliencyGuidelines_NIST"}],"_:b4":{"@id":"_:b4"},"d3f:Detect":{"@id":"d3f:Detect"},"d3f:Firmware":{"@id":"d3f:Firmware"},"d3f:FirmwareVerification":{"@id":"d3f:FirmwareVerification","@type":["http://www.w3.org/2002/07/owl#NamedIndividual","d3f:PlatformMonitoring","http://www.w3.org/2002/07/owl#Class","_:b0","_:b1","_:b2","_:b3"],"d3f:d3fend-id":"D3-FV","definition":"Using embedded trust identification markers to identify legitimate firmware and hardware configurations.","d3f:enables":{"@id":"d3f:Detect"},"kb-article":"## How it works\nValid firmware, and hardware configurations, are identified and marked with a trust identification value. The trust identification value is stored on one of the embedded devices of the trusted configuration. A centralized database of trusted values is maintained for the identified configurations on a trust server, and they are used in the validation process.\n\nThe validation process uses a trust server to validate deployed trusted configurations by employing an attestation protocol. The user defined values and specific hardware values are cryptographically compared to the stored trust values on the devices . Comparisons that fail the attestation test are deemed untrusted.\n\n\n\n## Considerations\n* Requires the deployment of a centralized trust server\n* Trust values will need to be generated for specific devices\n* Changes to trusted configurations will need to be managed across the enterprise","kb-reference":[{"@id":"d3f:Reference_PlatformFirmwareResiliencyGuidelines_NIST"},{"@id":"d3f:Reference-FirmwareVerificationEclypsium"},{"@id":"d3f:Reference-FirmwareVerificationTrapezoid"}],"d3f:verifies":{"@id":"d3f:Firmware"},"rdfs:label":"Firmware Verification","rdfs:subClassOf":[{"@id":"d3f:PlatformMonitoring"},{"@id":"_:b4"}]},"d3f:PlatformMonitoring":{"@id":"d3f:PlatformMonitoring"},"d3f:Reference-FirmwareVerificationEclypsium":{"@id":"d3f:Reference-FirmwareVerificationEclypsium"},"d3f:Reference-FirmwareVerificationTrapezoid":{"@id":"d3f:Reference-FirmwareVerificationTrapezoid"},"d3f:Reference_PlatformFirmwareResiliencyGuidelines_NIST":{"@id":"d3f:Reference_PlatformFirmwareResiliencyGuidelines_NIST"},"name":"d3f:FirmwareVerification","related_offensive_matrix":{"Defense Evasion":[["Rootkit",[{"otech_parent_string":{"type":"literal","value":"Defense Evasion Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Rootkit"},"otech_id":{"type":"literal","value":"T1014"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasion"},"otactic_string":{"type":"literal","value":"Defense Evasion"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1014"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Firmware"},"o_digital_artifact_string":{"type":"literal","value":"Firmware"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Firmware"},"d_digital_artifact_string":{"type":"literal","value":"Firmware"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]],["Pre-OS Boot",[{"otech_parent_string":{"type":"literal","value":"Pre-OS Boot"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"false"},"otech_string":{"type":"literal","value":"System Firmware"},"otech_id":{"type":"literal","value":"T1542.001"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasion"},"otactic_string":{"type":"literal","value":"Defense Evasion"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1542.001"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#SystemFirmware"},"o_digital_artifact_string":{"type":"literal","value":"System Firmware"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Firmware"},"d_digital_artifact_string":{"type":"literal","value":"Firmware"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}},{"otech_parent_string":{"type":"literal","value":"Pre-OS Boot"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"false"},"otech_string":{"type":"literal","value":"Component Firmware"},"otech_id":{"type":"literal","value":"T1542.002"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasion"},"otactic_string":{"type":"literal","value":"Defense Evasion"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1542.002"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Firmware"},"o_digital_artifact_string":{"type":"literal","value":"Firmware"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Firmware"},"d_digital_artifact_string":{"type":"literal","value":"Firmware"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]],"Persistence":[["Pre-OS Boot",[{"otech_parent_string":{"type":"literal","value":"Pre-OS Boot"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"false"},"otech_string":{"type":"literal","value":"System Firmware"},"otech_id":{"type":"literal","value":"T1542.001"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Persistence"},"otactic_string":{"type":"literal","value":"Persistence"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1542.001"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#SystemFirmware"},"o_digital_artifact_string":{"type":"literal","value":"System Firmware"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Firmware"},"d_digital_artifact_string":{"type":"literal","value":"Firmware"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}},{"otech_parent_string":{"type":"literal","value":"Pre-OS Boot"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"false"},"otech_string":{"type":"literal","value":"Component Firmware"},"otech_id":{"type":"literal","value":"T1542.002"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Persistence"},"otactic_string":{"type":"literal","value":"Persistence"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1542.002"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Firmware"},"o_digital_artifact_string":{"type":"literal","value":"Firmware"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Firmware"},"d_digital_artifact_string":{"type":"literal","value":"Firmware"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]]},"digital_artifacts":{"head":{"vars":["relationship","relationship_label","relationship_comment","digital_artifact","digital_artifact_label","digital_artifact_comment"]},"results":{"bindings":[{"relationship":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#verifies"},"relationship_label":{"type":"literal","value":"verifies"},"relationship_comment":{"type":"literal","value":"x verifies y: A technique x confirms the truth of a digital artifact y."},"digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Firmware"},"digital_artifact_label":{"type":"literal","value":"Firmware"},"digital_artifact_comment":{"type":"literal","value":"In electronic systems and computing, firmware is a type of software that provides control, monitoring and data manipulation of engineered products and systems. Typical examples of devices containing firmware are embedded systems (such as traffic lights, consumer appliances, remote controls and digital watches), computers, computer peripherals, mobile phones, and digital cameras. The firmware contained in these devices provides the low-level control program for the device."}}]}},"references":{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#"},"@graph":[{"@id":"d3f:Reference-FirmwareVerificationEclypsium","@type":["d3f:PatentReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://patents.google.com/patent/US20200074086A1/en"},"d3f:kb-abstract":"Systems and methods are provided herein for monitoring and identifying potential security vulnerabilities in hardware and / or firmware of host devices .","d3f:kb-author":"Yuriy Bulygin, Oleksandr Bazhaniuk","d3f:kb-is-example-of":{"@id":"d3f:FirmwareVerification"},"d3f:kb-organization":"ECLYPSIUM , Inc","d3f:kb-reference-title":"Methods and systems for hardware and firmware security monitoring","d3f:reference-type-label":"Patent","rdfs:label":"Reference - Firmware Verification Eclypsium"},{"@id":"d3f:Reference-FirmwareVerificationTrapezoid","@type":["d3f:PatentReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://patents.google.com/patent/US9674183B2/en"},"d3f:kb-abstract":"A trust control management method for security, operable on a computer system generates a unique Trust ID value by combining user-defined values with hardware-specific values associated with the user's computer system and storing the Trust ID value in a memory register physically associated with the hardware of the computer system.","d3f:kb-author":"Michael J. Dyer, Jose E. Gonzalez, Albert Caballero","d3f:kb-is-example-of":{"@id":"d3f:FirmwareVerification"},"d3f:kb-organization":"Trapezoid, Inc","d3f:kb-reference-title":"System and method for hardware-based trust control management","d3f:reference-type-label":"Patent","rdfs:label":"Reference - Firmware Verification Trapezoid"},{"@id":"d3f:Reference_PlatformFirmwareResiliencyGuidelines_NIST","@type":["d3f:GuidelineReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-193.pdf"},"d3f:kb-abstract":"This document provides technical guidelines and recommendations supporting resiliency of platform firmware and data against potentially destructive attacks. The platform is a collection of fundamental hardware and firmware components needed to boot and operate a system. A successful attack on platform firmware could render a system inoperable, perhaps permanently, or requiring reprogramming by the original manufacturer, resulting in significant disruptions to users. The technical guidelines in this document promote resiliency in the platform by describing security mechanisms for protecting the platform against unauthorized changes, detecting unauthorized changes that occur, and recovering from attacks rapidly and securely. Implementers, including Original Equipment Manufacturers (OEMs) and component/device suppliers, can use these guidelines to build stronger security mechanisms into platforms. System administrators, security professionals, and users can use this document to guide procurement strategies and priorities for future systems.","d3f:kb-author":"NIST","d3f:kb-is-example-of":{"@id":"d3f:FirmwareVerification"},"d3f:kb-mitre-analysis":"","d3f:kb-organization":"NIST","d3f:kb-reference-title":"Platform Firmware Resiliency Guidelines","d3f:reference-type-label":"Guideline","rdfs:label":"Reference - Platform Firmware Resiliency Guidelines - NIST"}]},"references_meta":{"Patent":2,"Guideline":1}}