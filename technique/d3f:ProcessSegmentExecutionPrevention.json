{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#","kb-article":"d3f:kb-article","definition":"d3f:definition","kb-reference":{"@id":"d3f:kb-reference","@container":"@set"}},"@graph":[{"@id":"_:b0"},{"@id":"d3f:ApplicationHardening"},{"@id":"d3f:Harden"},{"@id":"d3f:ProcessSegment"},{"@id":"d3f:ProcessSegmentExecutionPrevention","@type":["d3f:ApplicationHardening","http://www.w3.org/2002/07/owl#NamedIndividual","http://www.w3.org/2002/07/owl#Class"],"d3f:d3fend-id":"D3-PSEP","definition":"Preventing execution of any address in a memory region other than the code segment.","d3f:enables":{"@id":"d3f:Harden"},"kb-article":"## How it works\n\nDuring execution of a process, the instruction pointer register should only point to addresses in a code segment (also called the .text segment), as this is the sole segment which should contain program code.\n\nWhen this technique detects an attempt to execute something that has been designated as non-executable, other techniques such as those in **Process Eviction** might be invoked, such as **Process Termination** to end the current process, or **Executable Blacklisting** to blacklist the potentially vulnerable or malfunctioning executable.\n\n### Software-based implementations\nThe software-based implementation in Windows XP SP2 might not check that every time the instruction pointer is changed, and does not check on each jump or return.  Before calling an exception handler, Windows XP SP2 software-enforced DEP checks whether the exception handler is located in a memory region marked as executable.  If the program was also built with SafeSEH, this implementation also checks before changing control to the exception handler whether it is a registered exception handler in the program's file on disk.\n\n### Hardware-based implementations\nThe NX (No Execute) or XD (Execute Disable) bit on the processor specifies whether a certain part of memory is executable.  Early implementations set this bit by the memory segment, while modern implementations which are built on the flat memory model often store this bit in each entry of the page table, to control execution by the page.\n\n\n## Considerations\n\nNon-hardware process data segment execution prevention is more susceptible to being able to be turned off for a page of memory.\n\nDifferent implementations of this defense have been in place since the 1980s, but implementation stalled when larger 16-bit programs began stuffing code in the segments usually reserved for data. Many modern programs follow the best practice of separation of code and data, are able to run under this defense.\n\nROP or ret2libc/return-to-function attacks could bypass this defense, as although they may pass attacker-controlled data or stack frames to a function, they abuse functions that are legitimately located in the .text segment (code segment) of the program.  For those, more advanced defenses such as a table of valid jump addresses, function call analysis, or return depth analysis could be used.","kb-reference":[{"@id":"d3f:Reference_MitigateThreatsByUsingWindows10SecurityFeatures:DataExecutionPrevention_Microsoft"},{"@id":"d3f:Reference_WhatIsNX/XDFeature?[sic]_RedHat"}],"d3f:neutralizes":{"@id":"d3f:ProcessSegment"},"rdfs:label":"Process Segment Execution Prevention","rdfs:subClassOf":[{"@id":"d3f:ApplicationHardening"},{"@id":"_:b0"}]},{"@id":"d3f:Reference_MitigateThreatsByUsingWindows10SecurityFeatures:DataExecutionPrevention_Microsoft"},{"@id":"d3f:Reference_WhatIsNX/XDFeature?[sic]_RedHat"}],"_:b0":{"@id":"_:b0"},"d3f:ApplicationHardening":{"@id":"d3f:ApplicationHardening"},"d3f:Harden":{"@id":"d3f:Harden"},"d3f:ProcessSegment":{"@id":"d3f:ProcessSegment"},"d3f:ProcessSegmentExecutionPrevention":{"@id":"d3f:ProcessSegmentExecutionPrevention","@type":["d3f:ApplicationHardening","http://www.w3.org/2002/07/owl#NamedIndividual","http://www.w3.org/2002/07/owl#Class"],"d3f:d3fend-id":"D3-PSEP","definition":"Preventing execution of any address in a memory region other than the code segment.","d3f:enables":{"@id":"d3f:Harden"},"kb-article":"## How it works\n\nDuring execution of a process, the instruction pointer register should only point to addresses in a code segment (also called the .text segment), as this is the sole segment which should contain program code.\n\nWhen this technique detects an attempt to execute something that has been designated as non-executable, other techniques such as those in **Process Eviction** might be invoked, such as **Process Termination** to end the current process, or **Executable Blacklisting** to blacklist the potentially vulnerable or malfunctioning executable.\n\n### Software-based implementations\nThe software-based implementation in Windows XP SP2 might not check that every time the instruction pointer is changed, and does not check on each jump or return.  Before calling an exception handler, Windows XP SP2 software-enforced DEP checks whether the exception handler is located in a memory region marked as executable.  If the program was also built with SafeSEH, this implementation also checks before changing control to the exception handler whether it is a registered exception handler in the program's file on disk.\n\n### Hardware-based implementations\nThe NX (No Execute) or XD (Execute Disable) bit on the processor specifies whether a certain part of memory is executable.  Early implementations set this bit by the memory segment, while modern implementations which are built on the flat memory model often store this bit in each entry of the page table, to control execution by the page.\n\n\n## Considerations\n\nNon-hardware process data segment execution prevention is more susceptible to being able to be turned off for a page of memory.\n\nDifferent implementations of this defense have been in place since the 1980s, but implementation stalled when larger 16-bit programs began stuffing code in the segments usually reserved for data. Many modern programs follow the best practice of separation of code and data, are able to run under this defense.\n\nROP or ret2libc/return-to-function attacks could bypass this defense, as although they may pass attacker-controlled data or stack frames to a function, they abuse functions that are legitimately located in the .text segment (code segment) of the program.  For those, more advanced defenses such as a table of valid jump addresses, function call analysis, or return depth analysis could be used.","kb-reference":[{"@id":"d3f:Reference_MitigateThreatsByUsingWindows10SecurityFeatures:DataExecutionPrevention_Microsoft"},{"@id":"d3f:Reference_WhatIsNX/XDFeature?[sic]_RedHat"}],"d3f:neutralizes":{"@id":"d3f:ProcessSegment"},"rdfs:label":"Process Segment Execution Prevention","rdfs:subClassOf":[{"@id":"d3f:ApplicationHardening"},{"@id":"_:b0"}]},"d3f:Reference_MitigateThreatsByUsingWindows10SecurityFeatures:DataExecutionPrevention_Microsoft":{"@id":"d3f:Reference_MitigateThreatsByUsingWindows10SecurityFeatures:DataExecutionPrevention_Microsoft"},"d3f:Reference_WhatIsNX/XDFeature?[sic]_RedHat":{"@id":"d3f:Reference_WhatIsNX/XDFeature?[sic]_RedHat"},"name":"d3f:ProcessSegmentExecutionPrevention","related_offensive_matrix":{"Defense Evasion":[["Process Injection",[{"otech_parent_string":{"type":"literal","value":"Process Injection"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"false"},"otech_string":{"type":"literal","value":"Process Hollowing"},"otech_id":{"type":"literal","value":"T1055.012"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasion"},"otactic_string":{"type":"literal","value":"Defense Evasion"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1055.012"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Code Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]],["Exploitation for Defense Evasion",[{"otech_parent_string":{"type":"literal","value":"Defense Evasion Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Exploitation for Defense Evasion"},"otech_id":{"type":"literal","value":"T1211"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#DefenseEvasion"},"otactic_string":{"type":"literal","value":"Defense Evasion"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1211"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Code Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]],"Privilege Escalation":[["Process Injection",[{"otech_parent_string":{"type":"literal","value":"Process Injection"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"false"},"otech_string":{"type":"literal","value":"Process Hollowing"},"otech_id":{"type":"literal","value":"T1055.012"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#PrivilegeEscalation"},"otactic_string":{"type":"literal","value":"Privilege Escalation"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1055.012"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Code Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]],["Exploitation for Privilege Escalation",[{"otech_parent_string":{"type":"literal","value":"Privilege Escalation Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Exploitation for Privilege Escalation"},"otech_id":{"type":"literal","value":"T1068"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#PrivilegeEscalation"},"otactic_string":{"type":"literal","value":"Privilege Escalation"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1068"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Code Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]],"Collection":[["Input Capture",[{"otech_parent_string":{"type":"literal","value":"Input Capture"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"false"},"otech_string":{"type":"literal","value":"Credential API Hooking"},"otech_id":{"type":"literal","value":"T1056.004"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Collection"},"otactic_string":{"type":"literal","value":"Collection"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1056.004"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Code Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]],"Credential Access":[["Input Capture",[{"otech_parent_string":{"type":"literal","value":"Input Capture"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"false"},"otech_string":{"type":"literal","value":"Credential API Hooking"},"otech_id":{"type":"literal","value":"T1056.004"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#CredentialAccess"},"otactic_string":{"type":"literal","value":"Credential Access"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1056.004"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Code Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]],["Exploitation for Credential Access",[{"otech_parent_string":{"type":"literal","value":"Credential Access Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Exploitation for Credential Access"},"otech_id":{"type":"literal","value":"T1212"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#CredentialAccess"},"otactic_string":{"type":"literal","value":"Credential Access"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1212"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Code Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]],"Initial Access":[["Drive-by Compromise",[{"otech_parent_string":{"type":"literal","value":"Initial Access Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Drive-by Compromise"},"otech_id":{"type":"literal","value":"T1189"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#InitialAccess"},"otactic_string":{"type":"literal","value":"Initial Access"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1189"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]],["Exploit Public-Facing Application",[{"otech_parent_string":{"type":"literal","value":"Initial Access Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Exploit Public-Facing Application"},"otech_id":{"type":"literal","value":"T1190"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#InitialAccess"},"otactic_string":{"type":"literal","value":"Initial Access"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1190"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]],"Execution":[["Exploitation for Client Execution",[{"otech_parent_string":{"type":"literal","value":"Execution Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Exploitation for Client Execution"},"otech_id":{"type":"literal","value":"T1203"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Execution"},"otactic_string":{"type":"literal","value":"Execution"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1203"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#modifies"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Code Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]],"Lateral Movement":[["Exploitation of Remote Services",[{"otech_parent_string":{"type":"literal","value":"Lateral Movement Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Exploitation of Remote Services"},"otech_id":{"type":"literal","value":"T1210"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#LateralMovement"},"otactic_string":{"type":"literal","value":"Lateral Movement"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1210"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}},{"otech_parent_string":{"type":"literal","value":"Lateral Movement Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Exploitation of Remote Services"},"otech_id":{"type":"literal","value":"T1210"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#LateralMovement"},"otactic_string":{"type":"literal","value":"Lateral Movement"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1210"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#may-modify"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessCodeSegment"},"o_digital_artifact_string":{"type":"literal","value":"Process Code Segment"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"d_digital_artifact_string":{"type":"literal","value":"Process Segment"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Harden"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]]},"digital_artifacts":{"head":{"vars":["relationship","relationship_label","relationship_comment","digital_artifact","digital_artifact_label","digital_artifact_comment"]},"results":{"bindings":[{"relationship":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#neutralizes"},"relationship_label":{"type":"literal","value":"neutralizes"},"relationship_comment":{"type":"literal","value":"x neutralizes y: The technique x makes the execution of actions of y ineffective by preventing or counterbalancing the effect of y."},"digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#ProcessSegment"},"digital_artifact_label":{"type":"literal","value":"Process Segment"},"digital_artifact_comment":{"type":"literal","value":"Process segments are distinct partitions of the memory space of a running process.  Heap, data, code, and stack segments are examples of process segments."}}]}},"references":{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#"},"@graph":[{"@id":"d3f:Reference_MitigateThreatsByUsingWindows10SecurityFeatures:DataExecutionPrevention_Microsoft","@type":["d3f:UserManualReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://docs.microsoft.com/en-us/windows/security/threat-protection/overview-of-threat-mitigations-in-windows-10#data-execution-prevention"},"d3f:kb-abstract":"Malware depends on its ability to insert a malicious payload into memory with the hope that it will be executed later. Wouldn't it be great if you could prevent malware from running if it wrote to an area that has been allocated solely for the storage of information?\n\nData Execution Prevention (DEP) does exactly that, by substantially reducing the range of memory that malicious code can use for its benefit. DEP uses the No eXecute bit on modern CPUs to mark blocks of memory as read-only so that those blocks can't be used to execute malicious code that may be inserted by means of a vulnerability exploit.","d3f:kb-author":"Nick Schonning, Daniel Simpson, Marty Hernandez Avedon, Trond B. Krokli, jreeds, jcaparas, Andres Mariano Gorzelany, Tina Burden, Thomas Raya, Justin Hall, justanotheranonymoususer, Liza Poggemeyer, Dani Halfin, imba-tjd (Authors for entire page)","d3f:kb-is-example-of":{"@id":"d3f:ProcessSegmentExecutionPrevention"},"d3f:kb-mitre-analysis":"","d3f:kb-organization":"Microsoft","d3f:kb-reference-title":"Mitigate threats by using Windows 10 security features: Data Execution Prevention","d3f:reference-type-label":"User Manual","rdfs:label":"Reference - Mitigate threats by using Windows 10 security features: Data Execution Prevention - Microsoft"},{"@id":"d3f:Reference_WhatIsNX/XDFeature?[sic]_RedHat","@type":["d3f:InternetArticleReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://access.redhat.com/solutions/2936741"},"d3f:kb-abstract":"What is NX/XD feature ?\nHow to check whether NX/XD is enabled ?\nHow to enable or disable NX/XD?\n\nNX/XD is a hardware cpu feature which is provided in almost all the hardware. Some BIOS has advanced option of enabling or disabling it.\nNX stands for No eXecute and XD stands for eXecute Disable. Both are same and is a technology used in processors to prevent execution of certain types of code.","d3f:kb-author":"Red Hat","d3f:kb-is-example-of":{"@id":"d3f:ProcessSegmentExecutionPrevention"},"d3f:kb-mitre-analysis":"","d3f:kb-organization":"Red Hat","d3f:kb-reference-title":"What is NX/XD feature?","d3f:reference-type-label":"Internet Article","rdfs:label":"Reference - What is NX/XD feature ? [sic] - Red Hat"}]},"references_meta":{"User Manual":1,"Internet Article":1}}