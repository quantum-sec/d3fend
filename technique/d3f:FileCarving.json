{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#","kb-article":"d3f:kb-article","definition":"d3f:definition","kb-reference":{"@id":"d3f:kb-reference","@container":"@set"}},"@graph":[{"@id":"_:b0"},{"@id":"d3f:Detect"},{"@id":"d3f:FileCarving","@type":["d3f:NetworkTrafficAnalysis","http://www.w3.org/2002/07/owl#NamedIndividual","http://www.w3.org/2002/07/owl#Class"],"d3f:analyzes":{"@id":"d3f:FileTransferNetworkTraffic"},"d3f:d3fend-id":"D3-FC","definition":"Extracting files from network application protocols through the use of network stream reassembly software.","d3f:enables":{"@id":"d3f:Detect"},"kb-article":"## How it works\nProtocol stream reassembly software recreates a directional byte stream by analyzing captured network packets. Once the stream is reassembled pattern matching is applied to determine if it contains a file of interest. Files of interest range from executable, archive, or document file formats. Once the file is captured, it is then processed with standard File Analysis Techniques.  Example network protocols include HTTP, SMTP, FTP, HTTP/2, and TLS/HTTP/Dropbox.\n\n## Considerations\nThis is an error prone process due to the intricacies of network protocols and network packet capture.  For example reassembly may be done in real-time or streaming fashion, or packets may be written to disk, then bulk processed.  The packets may arrive out of order, with fragmentation, duplicates, or re-transmissions.  The reassembly software must compensate for the imperfect packet stream in order to recreate the well formed file which was transmitted.","kb-reference":[{"@id":"d3f:Reference_ComputerWormDefenseSystemAndMethod_FireEyeInc"}],"rdfs:label":"File Carving","rdfs:subClassOf":[{"@id":"d3f:NetworkTrafficAnalysis"},{"@id":"_:b0"}]},{"@id":"d3f:FileTransferNetworkTraffic"},{"@id":"d3f:NetworkTrafficAnalysis"},{"@id":"d3f:Reference_ComputerWormDefenseSystemAndMethod_FireEyeInc"}],"_:b0":{"@id":"_:b0"},"d3f:Detect":{"@id":"d3f:Detect"},"d3f:FileCarving":{"@id":"d3f:FileCarving","@type":["d3f:NetworkTrafficAnalysis","http://www.w3.org/2002/07/owl#NamedIndividual","http://www.w3.org/2002/07/owl#Class"],"d3f:analyzes":{"@id":"d3f:FileTransferNetworkTraffic"},"d3f:d3fend-id":"D3-FC","definition":"Extracting files from network application protocols through the use of network stream reassembly software.","d3f:enables":{"@id":"d3f:Detect"},"kb-article":"## How it works\nProtocol stream reassembly software recreates a directional byte stream by analyzing captured network packets. Once the stream is reassembled pattern matching is applied to determine if it contains a file of interest. Files of interest range from executable, archive, or document file formats. Once the file is captured, it is then processed with standard File Analysis Techniques.  Example network protocols include HTTP, SMTP, FTP, HTTP/2, and TLS/HTTP/Dropbox.\n\n## Considerations\nThis is an error prone process due to the intricacies of network protocols and network packet capture.  For example reassembly may be done in real-time or streaming fashion, or packets may be written to disk, then bulk processed.  The packets may arrive out of order, with fragmentation, duplicates, or re-transmissions.  The reassembly software must compensate for the imperfect packet stream in order to recreate the well formed file which was transmitted.","kb-reference":[{"@id":"d3f:Reference_ComputerWormDefenseSystemAndMethod_FireEyeInc"}],"rdfs:label":"File Carving","rdfs:subClassOf":[{"@id":"d3f:NetworkTrafficAnalysis"},{"@id":"_:b0"}]},"d3f:FileTransferNetworkTraffic":{"@id":"d3f:FileTransferNetworkTraffic"},"d3f:NetworkTrafficAnalysis":{"@id":"d3f:NetworkTrafficAnalysis"},"d3f:Reference_ComputerWormDefenseSystemAndMethod_FireEyeInc":{"@id":"d3f:Reference_ComputerWormDefenseSystemAndMethod_FireEyeInc"},"name":"d3f:FileCarving","related_offensive_matrix":{"Command And Control":[["Application Layer Protocol",[{"otech_parent_string":{"type":"literal","value":"Application Layer Protocol"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"false"},"otech_string":{"type":"literal","value":"File Transfer Protocols"},"otech_id":{"type":"literal","value":"T1071.002"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#CommandAndControl"},"otactic_string":{"type":"literal","value":"Command And Control"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1071.002"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#produces"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#OutboundInternetFileTransferTraffic"},"o_digital_artifact_string":{"type":"literal","value":"Outbound Internet File Transfer Traffic"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#FileTransferNetworkTraffic"},"d_digital_artifact_string":{"type":"literal","value":"File Transfer Network Traffic"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]],"Lateral Movement":[["Lateral Tool Transfer",[{"otech_parent_string":{"type":"literal","value":"Lateral Movement Technique"},"otech_parent_is_toplevel":{"datatype":"http://www.w3.org/2001/XMLSchema#boolean","type":"literal","value":"true"},"otech_string":{"type":"literal","value":"Lateral Tool Transfer"},"otech_id":{"type":"literal","value":"T1570"},"offensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#LateralMovement"},"otactic_string":{"type":"literal","value":"Lateral Movement"},"offensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"},"offensive_technique":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#T1570"},"offensive_artifact_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#produces"},"o_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#IntranetFileTransferTraffic"},"o_digital_artifact_string":{"type":"literal","value":"Intranet File Transfer Traffic"},"d_digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#FileTransferNetworkTraffic"},"d_digital_artifact_string":{"type":"literal","value":"File Transfer Network Traffic"},"defensive_tactic":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#Detect"},"defensive_verb":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#enables"}}]]]},"digital_artifacts":{"head":{"vars":["relationship","relationship_label","relationship_comment","digital_artifact","digital_artifact_label","digital_artifact_comment"]},"results":{"bindings":[{"relationship":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#analyzes"},"relationship_label":{"type":"literal","value":"analyzes"},"relationship_comment":{"type":"literal","value":"x analyzes y: The subject x break down object y into components or essential features, assessing y by quantitative methods, qualitative methods, or both.  Usually the analysis is done in terms of some model or framework."},"digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#FileTransferNetworkTraffic"},"digital_artifact_label":{"type":"literal","value":"File Transfer Network Traffic"},"digital_artifact_comment":{"type":"literal","value":"File transfer network traffic is network traffic related to file transfers between network nodes..This includes only network traffic conforming to standard file transfer protocols, not custom transfer protocols."}}]}},"references":{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#"},"@graph":[{"@id":"d3f:Reference_ComputerWormDefenseSystemAndMethod_FireEyeInc","@type":["d3f:PatentReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://patents.google.com/patent/US20130036472A1"},"d3f:kb-abstract":"\"A computer worm defense system comprises multiple containment systems tied together by a management system. Each containment system is deployed on a separate communication network and contains a worm sensor and a blocking system. In various embodiments, the computer worm may be transported from a production network, where the computer worm is not readily identifiable, to an alternate network in the worm sensor where the computer worm may be readily identifiable. Computer worm identifiers generated by a worm sensor of one containment system can be provided not only to the blocking system of the same containment system, but can also be distributed by the management system to blocking systems of other containment systems.\"","d3f:kb-author":"Ashar Aziz","d3f:kb-is-example-of":{"@id":"d3f:FileCarving"},"d3f:kb-mitre-analysis":"This patent describes network data being copied by a tap and then analyzed in an analysis environment to determine whether the network data is suspicious using a heuristic module. The analysis environment replays transmission of the suspicious network data between a configured replayer and a virtual machine to detect unauthorized activity.","d3f:kb-organization":"FireEye Inc","d3f:kb-reference-title":"Computer Worm Defense System and Method","d3f:reference-type-label":"Patent","rdfs:label":"Reference - Computer Worm Defense System and Method - FireEye Inc"}]},"references_meta":{"Patent":1}}