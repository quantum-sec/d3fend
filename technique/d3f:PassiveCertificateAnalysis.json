{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#","kb-article":"d3f:kb-article","definition":"d3f:definition","kb-reference":{"@id":"d3f:kb-reference","@container":"@set"}},"@graph":[{"@id":"d3f:CertificateAnalysis"},{"@id":"d3f:CertificateFile"},{"@id":"d3f:Detect"},{"@id":"d3f:PassiveCertificateAnalysis","@type":["d3f:CertificateAnalysis","d3f:PassiveCertificateAnalysis","http://www.w3.org/2002/07/owl#NamedIndividual","http://www.w3.org/2002/07/owl#Class"],"d3f:analyzes":{"@id":"d3f:CertificateFile"},"d3f:d3fend-id":"D3-PCA","definition":"Collecting host certificates from network traffic or other passive sources like a certificate transparency log and analyzing them for unauthorized activity.","d3f:enables":{"@id":"d3f:Detect"},"kb-article":"## How it works\nCertificates are analyzed outside of a TLS server connection using third-party secure update logs, domain name analysis and analytics.\n\n### Secure update certificate logs\n* Certificate Logs\nThe key enabling feature is a secure service that maintains record logs of certificate activities. The logs allow users to only append certificates and never to delete or modify the log entries. The logs use Merkle Tree Hashes to ensure they have not been tampered with. The logging service also allows for public auditing by any user.\n\nThe logging service, upon receipt of a certificate to log, will respond with a signed certificate timestamp (SCT). The SCT guarantees the certificate will be added to the log within the time specified. The SCT must be present with the certificate during a TLS handshake.\n\n* Certificate Monitoring\nCertificate monitoring, of the logs, is typically done by the CA and they watch for suspicious certificate logging and unusual certificates or extensions or permissions. Monitors are also responsible for verifying the logs are accurate and public.\n\n* Certificate Auditors\nLog integrity is verified by log auditors. Auditors make use of log proofs are used to validate the cryptographic hashes (Merkle Trees) that the log employs are consistent. In order to ensure consistency throughout multiple monitors and auditors, sharing a common logging service, gossip protocol is employed.\n\n### Phishing domain name analysis\n* A curated corpus of known benign domains and phishing domain names is used as training text for machine learning. Through the use of feature set extraction, vectors labels are created with scoring to indicated if they are considered benign or phishing domains. \n\n* A stream of new or updated SSL certificates with fully qualified domain names (FQDN) is analyzed against the feature vectors and a predictive model determines a score for the domains. The scoring considers distance measures such as Levenshtein distance to help in determining the final label score. Supervised learning is also employed using the curated domains of benign and phishing domains.\n\n* Subdomain phishing analysis, prepending a trusted domain to a phishing domain, and regular expression comparisons  are also used in the label scoring model. A tunable measure is used to determine the threshold for alerting. This measure helps to balance between precision and recall measures.\n\n## Considerations\n* Some entity will need to run the logging service and a trusted entity is preferred.\n* Certificate Authorities will likely need to monitor the logging service for consistency.\n* Certificate revocation is unchanged and remains outside of Certificate Transparency, but certificates needing to be revoked are visible. \n* Technique dependent of reliable feed of new and updated certificates\n* Some certificate authorities allow for certificates to be registered with wildcards in the FQDN and thus will fail some of the subdomain scoring\n* Phishing HTTP domains will not be discovered","kb-reference":[{"@id":"d3f:Reference-CertificateTransparency"},{"@id":"d3f:Reference-StreamingPhish"}],"rdfs:comment":"Passively collecting certificates and analyzing them.","rdfs:label":"Passive Certificate Analysis","rdfs:subClassOf":{"@id":"d3f:CertificateAnalysis"}},{"@id":"d3f:Reference-CertificateTransparency"},{"@id":"d3f:Reference-StreamingPhish"}],"d3f:CertificateAnalysis":{"@id":"d3f:CertificateAnalysis"},"d3f:CertificateFile":{"@id":"d3f:CertificateFile"},"d3f:Detect":{"@id":"d3f:Detect"},"d3f:PassiveCertificateAnalysis":{"@id":"d3f:PassiveCertificateAnalysis","@type":["d3f:CertificateAnalysis","d3f:PassiveCertificateAnalysis","http://www.w3.org/2002/07/owl#NamedIndividual","http://www.w3.org/2002/07/owl#Class"],"d3f:analyzes":{"@id":"d3f:CertificateFile"},"d3f:d3fend-id":"D3-PCA","definition":"Collecting host certificates from network traffic or other passive sources like a certificate transparency log and analyzing them for unauthorized activity.","d3f:enables":{"@id":"d3f:Detect"},"kb-article":"## How it works\nCertificates are analyzed outside of a TLS server connection using third-party secure update logs, domain name analysis and analytics.\n\n### Secure update certificate logs\n* Certificate Logs\nThe key enabling feature is a secure service that maintains record logs of certificate activities. The logs allow users to only append certificates and never to delete or modify the log entries. The logs use Merkle Tree Hashes to ensure they have not been tampered with. The logging service also allows for public auditing by any user.\n\nThe logging service, upon receipt of a certificate to log, will respond with a signed certificate timestamp (SCT). The SCT guarantees the certificate will be added to the log within the time specified. The SCT must be present with the certificate during a TLS handshake.\n\n* Certificate Monitoring\nCertificate monitoring, of the logs, is typically done by the CA and they watch for suspicious certificate logging and unusual certificates or extensions or permissions. Monitors are also responsible for verifying the logs are accurate and public.\n\n* Certificate Auditors\nLog integrity is verified by log auditors. Auditors make use of log proofs are used to validate the cryptographic hashes (Merkle Trees) that the log employs are consistent. In order to ensure consistency throughout multiple monitors and auditors, sharing a common logging service, gossip protocol is employed.\n\n### Phishing domain name analysis\n* A curated corpus of known benign domains and phishing domain names is used as training text for machine learning. Through the use of feature set extraction, vectors labels are created with scoring to indicated if they are considered benign or phishing domains. \n\n* A stream of new or updated SSL certificates with fully qualified domain names (FQDN) is analyzed against the feature vectors and a predictive model determines a score for the domains. The scoring considers distance measures such as Levenshtein distance to help in determining the final label score. Supervised learning is also employed using the curated domains of benign and phishing domains.\n\n* Subdomain phishing analysis, prepending a trusted domain to a phishing domain, and regular expression comparisons  are also used in the label scoring model. A tunable measure is used to determine the threshold for alerting. This measure helps to balance between precision and recall measures.\n\n## Considerations\n* Some entity will need to run the logging service and a trusted entity is preferred.\n* Certificate Authorities will likely need to monitor the logging service for consistency.\n* Certificate revocation is unchanged and remains outside of Certificate Transparency, but certificates needing to be revoked are visible. \n* Technique dependent of reliable feed of new and updated certificates\n* Some certificate authorities allow for certificates to be registered with wildcards in the FQDN and thus will fail some of the subdomain scoring\n* Phishing HTTP domains will not be discovered","kb-reference":[{"@id":"d3f:Reference-CertificateTransparency"},{"@id":"d3f:Reference-StreamingPhish"}],"rdfs:comment":"Passively collecting certificates and analyzing them.","rdfs:label":"Passive Certificate Analysis","rdfs:subClassOf":{"@id":"d3f:CertificateAnalysis"}},"d3f:Reference-CertificateTransparency":{"@id":"d3f:Reference-CertificateTransparency"},"d3f:Reference-StreamingPhish":{"@id":"d3f:Reference-StreamingPhish"},"name":"d3f:PassiveCertificateAnalysis","related_offensive_matrix":{},"digital_artifacts":{"head":{"vars":["relationship","relationship_label","relationship_comment","digital_artifact","digital_artifact_label","digital_artifact_comment"]},"results":{"bindings":[{"relationship":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#analyzes"},"relationship_label":{"type":"literal","value":"analyzes"},"relationship_comment":{"type":"literal","value":"x analyzes y: The subject x break down object y into components or essential features, assessing y by quantitative methods, qualitative methods, or both.  Usually the analysis is done in terms of some model or framework."},"digital_artifact":{"type":"uri","value":"http://d3fend.mitre.org/ontologies/d3fend.owl#CertificateFile"},"digital_artifact_label":{"type":"literal","value":"Certificate File"},"digital_artifact_comment":{"type":"literal","value":"A file containing a digital certificate. In cryptography, a public key certificate (also known as a digital certificate or identity certificate) is an electronic document used to prove the ownership of a public key. The certificate includes information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner."}}]}},"references":{"@context":{"rdfs":"http://www.w3.org/2000/01/rdf-schema#","d3f":"http://d3fend.mitre.org/ontologies/d3fend.owl#"},"@graph":[{"@id":"d3f:Reference-CertificateTransparency","@type":["d3f:TechniqueReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://www.certificate-transparency.org/"},"d3f:kb-abstract":"Google's Certificate Transparency project fixes several structural flaws in the SSL certificate system, which is the main cryptographic system that underlies all HTTPS connections. \n\nThese flaws weaken the reliability and effectiveness of encrypted Internet connections and can compromise critical TLS/SSL mechanisms, including domain validation, end-to-end encryption, and the chains of trust set up by certificate authorities.","d3f:kb-author":"Google","d3f:kb-is-example-of":{"@id":"d3f:PassiveCertificateAnalysis"},"d3f:kb-organization":"Google","d3f:kb-reference-title":"Certificate Transparency","d3f:reference-type-label":"Technique Reference","rdfs:label":"Reference - Certificate Transparency"},{"@id":"d3f:Reference-StreamingPhish","@type":["d3f:TechniqueReference","http://www.w3.org/2002/07/owl#NamedIndividual"],"d3f:has-link":{"@type":"http://www.w3.org/2001/XMLSchema#anyURI","@value":"https://github.com/wesleyraptor/streamingphish"},"d3f:kb-abstract":"This is a utility that uses supervised machine learning to detect phishing domains from the Certificate Transparency log network.","d3f:kb-author":"Wes Connell","d3f:kb-is-example-of":{"@id":"d3f:PassiveCertificateAnalysis"},"d3f:kb-organization":"Uber","d3f:kb-reference-title":"StreamingPhish","d3f:reference-type-label":"Technique Reference","rdfs:label":"Reference - StreamingPhish"}]},"references_meta":{"Technique Reference":2}}